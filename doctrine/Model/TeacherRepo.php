<?php

namespace Model;

use Doctrine\DBAL\Query\QueryBuilder;

/**
 * TeacherRepo
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TeacherRepo extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return QueryBuilder
     */
    public function findMostIntersects()
    {
        $query = $this->getEntityManager()->getConnection()->prepare('
        select ts.teacher_id as left_teacher_id, ts2.teacher_id as right_teacher_id
        from teacher_student as ts
        inner join teacher_student as ts2
          on ts2.student_id = ts.student_id and ts2.teacher_id != ts.teacher_id
        group by ts.teacher_id, ts2.teacher_id
        order by count(ts.student_id) desc
        limit 1');
        $query->execute();

        return $query->fetchAll(\PDO::FETCH_ASSOC);
    }

    /**
     * @return QueryBuilder
     */
    public function findSpecial()
    {
        $query = $this->getEntityManager()->getConnection()->prepare('
        select t.*
        from teacher as t
        inner join teacher_student as cts on cts.teacher_id = t.id
        left join (
          select tm.teacher_id FROM
            (
                select ts.teacher_id, s.birthday
                from teacher_student as ts
                inner join student as s ON ts.student_id = s.id
            ) as tm
          where Month(tm.birthday) != :month
          group by tm.teacher_id
        ) as t2
        on t.id = t2.teacher_id
        where t2.teacher_id is null group by t.id;');
        $query->bindValue('month', 4);
        $query->execute();

        return $query->fetchAll(\PDO::FETCH_ASSOC);
    }

    /**
     * @return QueryBuilder
     */
    public function findAllOrdered()
    {
        return $this->getEntityManager()->getConnection()->createQueryBuilder()
            ->select('t.*, count(ts.student_id) as students_count')
            ->from('Teacher', 't')
            ->leftJoin('t', 'teacher_student', 'ts', 'ts.teacher_id = t.id')
            ->groupBy('t.id')
            ->orderBy('t.id', 'ASC');
    }
}
